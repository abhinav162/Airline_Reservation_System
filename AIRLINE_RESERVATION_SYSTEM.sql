-------------------------------------------------------------------------
-- CUSTOMER TABLE
-------------------------------------------------------------------------
CREATE TABLE CUSTOMER(
    cust_ID INT PRIMARY KEY,
    FNAME VARCHAR(255) NOT NULL,
    LNAME VARCHAR(255) NOT NULL,
    GENDER VARCHAR(2) NOT NULL,
    AGE NUMBER(3) NOT NULL,
    CUST_CONTACT_NUM NUMBER(11) NOT NULL,
    cust_email VARCHAR(255) NOT NULL UNIQUE,
    cust_password VARCHAR(20) NOT NULL
);


---------
-- CREATING SEQUENCE TO AUTO INCREMENT CUSTOMER ID
---------
CREATE SEQUENCE CUSTOMER_SEQ
START WITH 1001
INCREMENT BY 1
CACHE 10
NOMAXVALUE;

-----------
-- INSERT/UPDATE/DELETE DATA IN TABLE
-----------
INSERT INTO CUSTOMER VALUES(CUSTOMER_SEQ.nextval,'SRI','SOMANJALI','F',21,4984347398,'sri@outlook.com','sri123');
INSERT INTO CUSTOMER VALUES(CUSTOMER_SEQ.nextval,'AMAN','JANGRA','M',22,9874573687,'aman@gmail.com','aman123');
INSERT INTO CUSTOMER VALUES(CUSTOMER_SEQ.nextval,'PIYUSH','VERMA','M',21,9877543687,'piyush@gmail.com','piyush123');
INSERT INTO CUSTOMER VALUES(CUSTOMER_SEQ.nextval,'TANMAY','MAHAJAN','M',22,9877542387,'tanmay@gmail.com','tanmay123');



-------------------------------------------------------------------------
-- Airport Details Table
-------------------------------------------------------------------------
CREATE TABLE AIRPORT_DETAILS(
    ARP_CODE VARCHAR(4) PRIMARY KEY,
    ARP_NAME VARCHAR(50) NOT NULL
)

---------
-- INSERT AIRPORT DETAILS
---------
INSERT INTO AIRPORT_DETAILS VALUES('DEL', 'DELHI AIRPORT');
INSERT INTO AIRPORT_DETAILS VALUES('BOM', 'BOMBAY AIRPORT');
INSERT INTO AIRPORT_DETAILS VALUES('BLR', 'BANGALORE AIRPORT');
INSERT INTO AIRPORT_DETAILS VALUES('HYD', 'HYDERABAD AIRPORT');
INSERT INTO AIRPORT_DETAILS VALUES('GOA', 'GOA AIRPORT');
INSERT INTO AIRPORT_DETAILS VALUES('CCU', 'KOLKATA AIRPORT');
INSERT INTO AIRPORT_DETAILS VALUES('PNQ', 'PUNE AIRPORT');
INSERT INTO AIRPORT_DETAILS VALUES('MAA', 'CHENNAI AIRPORT');




-------------------------------------------------------------------------
-- AIRPLANE DETAILS
-------------------------------------------------------------------------
CREATE TABLE AIRPLANE_DETAILS(
    AIRPLANE_ID VARCHAR(3) PRIMARY KEY,
    AIRPLANE_NAME VARCHAR(50) NOT NULL
);

---------
-- INSERT AIRPLANE DETAILS
---------
INSERT INTO AIRPLANE_DETAILS VALUES('A01', 'AIRBUS A320');
INSERT INTO AIRPLANE_DETAILS VALUES('A02', 'AIRBUS A330');
INSERT INTO AIRPLANE_DETAILS VALUES('A03', 'AIRBUS A340');
INSERT INTO AIRPLANE_DETAILS VALUES('A04', 'AIRBUS A350');
INSERT INTO AIRPLANE_DETAILS VALUES('A05', 'AIRBUS A380');
INSERT INTO AIRPLANE_DETAILS VALUES('B01', 'BOEING 737');
INSERT INTO AIRPLANE_DETAILS VALUES('B02', 'BOEING 747');



-------------------------------------------------------------------------
-- Flight Schedule TABLE
-------------------------------------------------------------------------
CREATE TABLE FLIGHT_SCHEDULE(
    SCHED_ID INT PRIMARY KEY,
    AIRPLANE_ID VARCHAR(3) NOT NULL,
    DEPART_DATE DATE NOT NULL,
    DEPART_TIME VARCHAR(10) NOT NULL,
    SRC_AIRPORT_CODE VARCHAR(4) NOT NULL,
    DEST_AIRPORT_CODE VARCHAR(4) NOT NULL,
    CONSTRAINT FK_AIRPLANE FOREIGN KEY (AIRPLANE_ID) REFERENCES AIRPLANE_DETAILS(AIRPLANE_ID)
    ON DELETE CASCADE,
    CONSTRAINT FK_SRC_AIRPORT FOREIGN KEY (SRC_AIRPORT_CODE) REFERENCES AIRPORT_DETAILS(ARP_CODE)
    ON DELETE CASCADE,
    CONSTRAINT FK_DEST_AIRPORT FOREIGN KEY (DEST_AIRPORT_CODE) REFERENCES AIRPORT_DETAILS(ARP_CODE)
);

---------
-- CREATE SEQUENCE TO AUTO INCREMENT SCHED_ID
---------
CREATE SEQUENCE SCHED_SEQ
START WITH 1001
INCREMENT BY 1
CACHE 10
NOMAXVALUE;

-------------
-- INSERT SCHEDULE
-------------
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A01', '01-JAN-2023', '10:00', 'BOM', 'DEL');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A02', '01-JAN-2023', '11:00', 'HYD', 'GOA');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A03', '01-JAN-2023', '12:00', 'CCU', 'PNQ');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A04', '01-JAN-2023', '13:00', 'MAA', 'BLR');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A05', '01-JAN-2023', '14:00', 'DEL', 'BOM');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'B01', '01-JAN-2023', '15:00', 'GOA', 'HYD');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'B02', '01-JAN-2023', '16:00', 'PNQ', 'CCU');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A01', '02-JAN-2023', '10:00', 'BOM', 'DEL');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A02', '02-JAN-2023', '11:00', 'HYD', 'GOA');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A03', '02-JAN-2023', '12:00', 'CCU', 'PNQ');
INSERT INTO FLIGHT_SCHEDULE VALUES(SCHED_SEQ.nextval, 'A04', '02-JAN-2023', '13:00', 'MAA', 'BLR');



-------------------------------------------------------------------------
-- Ticket Table
-------------------------------------------------------------------------
CREATE TABLE TICKET(
    TICKET_ID INT PRIMARY KEY,
    CUST_ID INT NOT NULL,
    SCHED_ID INT NOT NULL,
    BOOKING_DATE DATE NOT NULL,
    CONSTRAINT FK_CUST_ID FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER(CUST_ID),
    CONSTRAINT FK_SCHED_ID FOREIGN KEY (SCHED_ID) REFERENCES FLIGHT_SCHEDULE(SCHED_ID)
);

---------
-- CREATE SEQUENCE TO AUTO INCREMENT TICKET_ID
---------
CREATE SEQUENCE TICKET_SEQ
START WITH 1
INCREMENT BY 1
CACHE 10
NOMAXVALUE;


--------
-- INSERT INTO TICKET TABLE
--------
INSERT INTO TICKET VALUES(TICKET_SEQ.nextval, 1002, 1001, '01-DEC-2022');
INSERT INTO TICKET VALUES(TICKET_SEQ.nextval, 1003, 1001, '01-DEC-2022');
INSERT INTO TICKET VALUES(TICKET_SEQ.nextval, 1002, 1004, '01-DEC-2022');
INSERT INTO TICKET VALUES(TICKET_SEQ.nextval, 1001, 1009, '01-DEC-2022');


-------------------------------------------------------------------------
-- DESCRIBE ALL TABLES
-------------------------------------------------------------------------
DESC CUSTOMER;
DESC AIRPORT_DETAILS;
DESC AIRPLANE_DETAILS;
DESC FLIGHT_SCHEDULE;
DESC TICKET;


-------------------------------------------------------------------------
-- SHOW ALL TABLES
-------------------------------------------------------------------------
SELECT * FROM CUSTOMER;
SELECT * FROM AIRPORT_DETAILS;
SELECT * FROM AIRPLANE_DETAILS;
SELECT * FROM FLIGHT_SCHEDULE;
SELECT * FROM TICKET;

-------------------------------------------------------------------------
-- DROP ALL SEQUENCES
-------------------------------------------------------------------------
DROP SEQUENCE CUSTOMER_SEQ;
DROP SEQUENCE SCHED_SEQ;
DROP SEQUENCE TICKET_SEQ;

-------------------------------------------------------------------------
-- DROP ALL TABLES
-------------------------------------------------------------------------
DROP TABLE CUSTOMER;
DROP TABLE AIRPORT_DETAILS;
DROP TABLE AIRPLANE_DETAILS;
DROP TABLE FLIGHT_SCHEDULE;
DROP TABLE TICKET;


-------------------------------------------------------------------------
-------------------------------------------------------------------------
-- PL/SQL
-------------------------------------------------------------------------
-------------------------------------------------------------------------

-- Quary to show FLIGHT DETAILS AND CUSTOMER DETAILS
SELECT T.TICKET_ID,T.CUST_ID,C.CUST_NAME, FROM FLIGHT_SCHEDULE F, CUSTOMER C, TICKET T WHERE F.SCHED_ID = T.SCHED_ID;

SELECT * FROM FLIGHT_SCHEDULE S,TICKET T WHERE S.SCHED_ID = T.SCHED_ID;

-- SHOW FULL TICKET
SELECT T.TICKET_ID,S.AIRPLANE_ID,A.AIRPLANE_NAME,T.BOOKING_DATE,S.DEPART_DATE,S.DEPART_TIME,S.SRC_AIRPORT_CODE,S.DEST_AIRPORT_CODE,C.FNAME,C.LNAME,C.CUST_EMAIL FROM FLIGHT_SCHEDULE S,TICKET T,AIRPLANE_DETAILS A,CUSTOMER C WHERE S.SCHED_ID = T.SCHED_ID AND A.AIRPLANE_ID = S.AIRPLANE_ID AND C.CUST_ID = T.CUST_ID;

-- SHOW CUSTOMER NAME WHO IS TRAVELLING FROM BOM TO DEL
SELECT C.FNAME,C.LNAME FROM FLIGHT_SCHEDULE S,TICKET T,CUSTOMER C WHERE S.SCHED_ID = T.SCHED_ID AND C.CUST_ID = T.CUST_ID AND S.SRC_AIRPORT_CODE = 'BOM' AND S.DEST_AIRPORT_CODE = 'DEL';



-------------------------------------------------------------------------
-------------------------------------------------------------------------
-- PL/SQL BLOCK TO SHOW TICKET DETAILS
-------------------------------------------------------------------------
-------------------------------------------------------------------------
DECLARE
    CUS_ID INT := &CUS_ID;

    CURSOR CUST_CUR IS
        SELECT T.TICKET_ID,S.AIRPLANE_ID,A.AIRPLANE_NAME,T.BOOKING_DATE,S.DEPART_DATE,S.DEPART_TIME,S.SRC_AIRPORT_CODE,S.DEST_AIRPORT_CODE,C.FNAME,C.LNAME,C.CUST_EMAIL FROM FLIGHT_SCHEDULE S,TICKET T,AIRPLANE_DETAILS A,CUSTOMER C WHERE S.SCHED_ID = T.SCHED_ID AND A.AIRPLANE_ID = S.AIRPLANE_ID AND C.CUST_ID = T.CUST_ID AND T.CUST_ID = CUS_ID;

    T_ID TICKET.TICKET_ID%TYPE;
    A_ID FLIGHT_SCHEDULE.AIRPLANE_ID%TYPE;
    A_NAME AIRPLANE_DETAILS.AIRPLANE_NAME%TYPE;
    B_DATE TICKET.BOOKING_DATE%TYPE;
    D_DATE FLIGHT_SCHEDULE.DEPART_DATE%TYPE;
    D_TIME FLIGHT_SCHEDULE.DEPART_TIME%TYPE;
    S_CODE FLIGHT_SCHEDULE.SRC_AIRPORT_CODE%TYPE;
    D_CODE FLIGHT_SCHEDULE.DEST_AIRPORT_CODE%TYPE;
    FNAME CUSTOMER.FNAME%TYPE;
    LNAME CUSTOMER.LNAME%TYPE;
    EMAIL CUSTOMER.CUST_EMAIL%TYPE;
BEGIN
    OPEN CUST_CUR;
        LOOP
            FETCH CUST_CUR INTO T_ID,A_ID,A_NAME,B_DATE,D_DATE,D_TIME,S_CODE,D_CODE,FNAME,LNAME,EMAIL;
            EXIT WHEN CUST_CUR%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE('==++==================================================++==');
            DBMS_OUTPUT.PUT_LINE('-> TICKET ID : ' || T_ID);
            DBMS_OUTPUT.PUT_LINE('-> AIRPLANE ID : ' || A_ID);
            DBMS_OUTPUT.PUT_LINE('-> AIRPLANE NAME : ' || A_NAME);
            DBMS_OUTPUT.PUT_LINE('-> BOOKING DATE : ' || B_DATE);
            DBMS_OUTPUT.PUT_LINE('-> DEPART DATE : ' || D_DATE);
            DBMS_OUTPUT.PUT_LINE('-> DEPART TIME : ' || D_TIME);
            DBMS_OUTPUT.PUT_LINE('-> SOURCE AIRPORT CODE : ' || S_CODE);
            DBMS_OUTPUT.PUT_LINE('-> DESTINATION AIRPORT CODE : ' || D_CODE);
            DBMS_OUTPUT.PUT_LINE('-> FIRST NAME : ' || FNAME);
            DBMS_OUTPUT.PUT_LINE('-> LAST NAME : ' || LNAME);
            DBMS_OUTPUT.PUT_LINE('-> EMAIL : ' || EMAIL);
            DBMS_OUTPUT.PUT_LINE('==++==================================================++==');
        END LOOP;
    CLOSE CUST_CUR;
END;